name: Deploy to Magalu Cloud

on:
  push:
    branches:
      - main
      - criacao-cd

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar conexão SSH
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      # 3. Verificar e instalar o Docker e rsync na VM remota
      - name: Verify and install Docker and rsync
        run: |
          # Verifica e instala o Docker, se necessário
          ssh "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "
            if ! command -v docker > /dev/null; then
              echo 'Docker not found. Installing...';
              curl -fsSL https://get.docker.com -o get-docker.sh;
              sh get-docker.sh;
              sudo usermod -aG docker $USER;
              echo 'Docker installed.';
            else
              echo 'Docker is already installed.';
            fi
          "

          # Verifica e instala o rsync, se necessário
          ssh "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "
            if ! command -v rsync > /dev/null; then
              echo 'rsync not found. Installing...';
              sudo apt-get update && sudo apt-get install -y rsync;
              echo 'rsync installed.';
            else
              echo 'rsync is already installed.';
            fi
          "

      # 4. Buildar a imagem Docker e criar uma tag
      - name: Build and Tag Docker Image
        run: |
          # Cria o diretório project no servidor remoto se não existir
          echo "Criando o diretório 'project' no servidor remoto..."
          ssh "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "mkdir -p ~/project"
          echo "Diretório 'project' criado ou já existente no servidor remoto."

          # Copia os arquivos do repositório para o diretório project
          echo "Copiando arquivos para o servidor remoto..."
          rsync -avz ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/project
          echo "Arquivos copiados com sucesso para o servidor remoto."

          # Construa a imagem Docker no diretório project
          echo "Construindo a imagem Docker no servidor remoto..."
          ssh "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "
            cd ~/project;
            if [ ! -f Dockerfile ]; then
              echo 'Dockerfile não encontrado no diretório!';
              exit 1;
            fi
            docker build -t bola-na-rede:0.0.1 .;
            echo 'Imagem Docker construída com sucesso!';
          "

      # 5. Subir o container
      - name: Run Docker Container
        run: |
          ssh "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "
            sudo docker stop bola-na-rede || true && sudo docker rm bola-na-rede || true;
            sudo docker run -d --name bola-na-rede -p 8080:8080 bola-na-rede:0.0.1;
          "
